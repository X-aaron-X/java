package examen;

import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Aaron
 */
public class Ventana extends javax.swing.JFrame {
    DefaultListModel<String> modeloVocales = new DefaultListModel<>();
    DefaultListModel<String> modeloConsonantes = new DefaultListModel<>();
    
    private static final String URL = "jdbc:mysql://localhost:3306/";
    private static final String USER = "root";
    private static final String PASS = "";
    private Statement stmt;
    private Connection conexion = null;
    
    public Ventana() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LabelPalabra = new javax.swing.JLabel();
        FieldPalabra = new javax.swing.JTextField();
        ButtonIngresar = new javax.swing.JButton();
        LabelVocal = new javax.swing.JLabel();
        LabelConsonante = new javax.swing.JLabel();
        ButtonExportar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListVocal = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListConsonante = new javax.swing.JList<>();
        ButtonBD = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LabelPalabra.setText("Ingrese Palabra");

        ButtonIngresar.setText("Ingresar");
        ButtonIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonIngresarActionPerformed(evt);
            }
        });

        LabelVocal.setText("Comienza con vocal");

        LabelConsonante.setText("Comienza con consonante");

        ButtonExportar.setText("Exportar Ficheros");
        ButtonExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonExportarActionPerformed(evt);
            }
        });

        jListVocal.setToolTipText("");
        jScrollPane1.setViewportView(jListVocal);

        jListConsonante.setToolTipText("");
        jScrollPane2.setViewportView(jListConsonante);

        ButtonBD.setText("Exportar Salir");
        ButtonBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(LabelVocal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LabelConsonante)
                .addGap(67, 67, 67))
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LabelPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(FieldPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(ButtonIngresar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ButtonExportar)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonBD))))
                .addGap(47, 47, 47))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FieldPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonIngresar))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelVocal)
                    .addComponent(LabelConsonante))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonExportar)
                    .addComponent(ButtonBD))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Exportacion de las palabras a los archivos "vocales.txt" y "consonantes.txt"
     * @param evt 
    */
    private void ButtonExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonExportarActionPerformed
        try {
            FileWriter vocalesWriter = new FileWriter("vocales.txt");
            
            for (int i = 0; i < modeloVocales.size(); i++) {
                vocalesWriter.write(modeloVocales.get(i) + "\n");
            }
            
            vocalesWriter.close();

            FileWriter consonantesWriter = new FileWriter("consonantes.txt");
            
            for (int i = 0; i < modeloConsonantes.size(); i++) {
                consonantesWriter.write(modeloConsonantes.get(i) + "\n");
            }
            
            consonantesWriter.close();

            JOptionPane.showMessageDialog(this, "Ficheros exportados exitosamente.");
        }
        catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al exportar los ficheros.");
        }
    }//GEN-LAST:event_ButtonExportarActionPerformed
    
    /**
     * Comprobacion de la palabra
     * Si esta vacia
     * Si es mayor a 10 caracteres
     * Si la palabra empieza por vocal o consonante que guardara en modeloVocales o modeloConsonantes
     * @param evt 
    */
    private void ButtonIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonIngresarActionPerformed
        String palabra = FieldPalabra.getText().trim().toLowerCase();
        
        if (palabra.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese una palabra");
        }
        else if (palabra.length() > 10) {
            JOptionPane.showMessageDialog(this, "La palabra no debe tener más de 10 caracteres");
            FieldPalabra.setText("");
        }
        else {
            if (palabra.matches("^[aeiou].*")) {
                 modeloVocales.addElement(palabra);
                 jListVocal.setModel(modeloVocales);
                 
            }
            else if (palabra.matches("^[a-z].*")) {
                modeloConsonantes.addElement(palabra);
                jListConsonante.setModel(modeloConsonantes);
            }
            
            FieldPalabra.setText("");
        }
    }//GEN-LAST:event_ButtonIngresarActionPerformed
    
    /**
     * Creacion de la DB, tablas y insercion de los datos
     * @param evt 
    */
    private void ButtonBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBDActionPerformed
        try {
            conexion = DriverManager.getConnection(URL, USER, PASS);
            stmt = conexion.createStatement();
            
            stmt.executeUpdate("CREATE DATABASE IF NOT EXISTS palabras");
            stmt.executeUpdate("USE palabras");
            
            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS vocales (codigo INT AUTO_INCREMENT PRIMARY KEY, palabra VARCHAR(10))");
            stmt.executeUpdate("CREATE TABLE IF NOT EXISTS consonantes (codigo INT AUTO_INCREMENT PRIMARY KEY, palabra VARCHAR(10))");

            for (int i = 0; i < modeloVocales.size(); i++) {
                stmt.executeUpdate("INSERT INTO vocales (palabra) VALUES ('" + modeloVocales.get(i) + "')");
            }
            
            for (int i = 0; i < modeloConsonantes.size(); i++) {
                stmt.executeUpdate("INSERT INTO consonantes (palabra) VALUES ('" + modeloConsonantes.get(i) + "')");
            }
            
            JOptionPane.showMessageDialog(this, "Los datos se han exportados a la base de datos correctamente");
            conexion.close();
            stmt.close();
            
            System.exit(0);
        }
        catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al conectar o exportar a la base de datos");
        }
    }//GEN-LAST:event_ButtonBDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonBD;
    private javax.swing.JButton ButtonExportar;
    private javax.swing.JButton ButtonIngresar;
    private javax.swing.JTextField FieldPalabra;
    private javax.swing.JLabel LabelConsonante;
    private javax.swing.JLabel LabelPalabra;
    private javax.swing.JLabel LabelVocal;
    private javax.swing.JList<String> jListConsonante;
    private javax.swing.JList<String> jListVocal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
